import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:news_app/application/playground/calculator_cubit/calculator_cubit.dart';
import 'package:news_app/core/commons/colors_const.dart';
import 'package:news_app/domain/playground/calculator/calculator_entity.dart';
import 'package:news_app/presentation/widget/chip.dart';
import 'package:news_app/presentation/widget/text_form_field.dart';
import 'package:news_app/presentation/widget/text_theme_extension.dart';
import 'package:news_app/presentation/widget/ui_helper.dart';

@RoutePage()
class CalculatorPage extends StatelessWidget {
  const CalculatorPage({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (context) => CalculatorCubit(),
      child: Builder(
        builder: (context) {
          return BlocBuilder<CalculatorCubit, CalculatorState>(
            builder: (context, state) {
              return Scaffold(
                bottomNavigationBar: Container(
                  margin: UIHelper.padding(horizontal: 10, vertical: 20),
                  child: ElevatedButton(
                    onPressed: () {
                      state.model.type.when(
                        none: () {},
                        add: () => context.read<CalculatorCubit>().addValue(),
                        substract: () => context.read<CalculatorCubit>().substractValue(),
                        multiply: () => context.read<CalculatorCubit>().multiplyValue(),
                        divide: () => context.read<CalculatorCubit>().divideValue(),
                      );
                    },
                    child: const Text(
                      'CALCULATE',
                    ),
                  ),
                ),
                appBar: AppBar(
                  title: const Text('Simple Calculator'),
                  leading: IconButton(
                    onPressed: () {
                      AutoRouter.of(context).pop();
                    },
                    icon: const Icon(Icons.arrow_back_ios_new_rounded),
                  ),
                ),
                body: SingleChildScrollView(
                  padding: UIHelper.padding(vertical: 20, horizontal: 20),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'CHOOSE TYPE',
                        style: context.textTheme.headlineSmall?.copyWith(
                          color: ColorConstant.green,
                        ),
                      ),
                      UIHelper.verticalSpace(20),
                      Wrap(
                        spacing: 10,
                        runSpacing: 10,
                        children: [
                          ChipCustom(
                            isChoosen: state.choosenType(const CalculatorType.add()),
                            title: 'Add',
                            onTap: () {
                              context.read<CalculatorCubit>().chooseType(const CalculatorType.add());
                            },
                          ),
                          ChipCustom(
                            isChoosen: state.choosenType(const CalculatorType.substract()),
                            title: 'Substract',
                            onTap: () {
                              context.read<CalculatorCubit>().chooseType(const CalculatorType.substract());
                            },
                          ),
                          ChipCustom(
                            isChoosen: state.choosenType(const CalculatorType.multiply()),
                            title: 'Multiply',
                            onTap: () {
                              context.read<CalculatorCubit>().chooseType(const CalculatorType.multiply());
                            },
                          ),
                          ChipCustom(
                            isChoosen: state.choosenType(const CalculatorType.divide()),
                            title: 'Divide',
                            onTap: () {
                              context.read<CalculatorCubit>().chooseType(const CalculatorType.divide());
                            },
                          ),
                        ],
                      ),
                      if (!state.typeNotChoosen)
                        Column(
                          children: [
                            UIHelper.verticalSpace(20),
                            Row(
                              children: [
                                SizedBox(
                                  width: UIHelper.setSp(60),
                                  child: TextFormFieldCustom(
                                    keyboardType: TextInputType.number,
                                    controller: context.read<CalculatorCubit>().leftController,
                                    textAlign: TextAlign.center,
                                    style: context.textTheme.displayLarge,
                                  ),
                                ),
                                UIHelper.horizontalSpace(10),
                                if (state.equationText(state.model.type).isNotEmpty) ...[
                                  Text(
                                    state.equationText(state.model.type),
                                    style: TextStyle(
                                      fontSize: UIHelper.setSp(30),
                                    ),
                                  ),
                                  UIHelper.horizontalSpace(10),
                                ],
                                SizedBox(
                                  width: UIHelper.setSp(60),
                                  child: TextFormFieldCustom(
                                    keyboardType: TextInputType.number,
                                    controller: context.read<CalculatorCubit>().rightController,
                                    textAlign: TextAlign.center,
                                    style: context.textTheme.displayLarge,
                                  ),
                                ),
                                UIHelper.horizontalSpace(10),
                                Text(
                                  '=',
                                  style: TextStyle(
                                    fontSize: UIHelper.setSp(40),
                                  ),
                                ),
                                UIHelper.horizontalSpace(10),
                                Text(
                                  state.displayValue,
                                  style: TextStyle(
                                    fontSize: UIHelper.setSp(40),
                                  ),
                                ),
                              ],
                            ),
                            UIHelper.verticalSpace(10),
                            Container(
                              padding: UIHelper.padding(vertical: 10, horizontal: 15),
                              decoration: BoxDecoration(
                                borderRadius: UIHelper.borderRadiusCircular(all: 5),
                                color: ColorConstant.lightGreen,
                              ),
                              child: Row(
                                children: [
                                  Icon(
                                    Icons.info_outline_rounded,
                                    color: state.showErrorMsg == null ? ColorConstant.green : ColorConstant.red,
                                  ),
                                  UIHelper.horizontalSpace(10),
                                  Text(
                                    state.showErrorMsg ?? 'Press calculate button to get the result',
                                    style: context.textTheme.bodySmall?.copyWith(
                                      color: state.showErrorMsg == null ? ColorConstant.grey : ColorConstant.red,
                                    ),
                                  )
                                ],
                              ),
                            )
                          ],
                        ),
                      UIHelper.verticalSpace(20),
                      Text(
                        'HISTORY',
                        style: context.textTheme.headlineSmall?.copyWith(
                          color: ColorConstant.green,
                        ),
                      ),
                      UIHelper.verticalSpace(10),
                      state.model.histories.isEmpty
                          ? Text(
                              'No history found',
                              style: context.textTheme.bodySmall?.copyWith(
                                color: ColorConstant.grey,
                                fontStyle: FontStyle.italic,
                              ),
                            )
                          : Column(
                              children: state.model.histories
                                  .map(
                                    (e) => Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        Row(
                                          crossAxisAlignment: CrossAxisAlignment.end,
                                          children: [
                                            Text(
                                              state.historyText(e),
                                              style: context.textTheme.displayLarge,
                                            ),
                                            const Spacer(),
                                            InkWell(
                                              onTap: () {
                                                context.read<CalculatorCubit>().restoreHistory(e.id);
                                              },
                                              child: Text(
                                                'Re-Apply',
                                                style: context.textTheme.bodySmall?.copyWith(
                                                  color: ColorConstant.primary,
                                                  fontWeight: FontWeight.bold,
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                        UIHelper.divider(),
                                      ],
                                    ),
                                  )
                                  .toList(),
                            ),
                    ],
                  ),
                ),
              );
            },
          );
        },
      ),
    );
  }
}
